//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoreMaterial.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KhoNguyenLieuEntities : DbContext
    {
        public KhoNguyenLieuEntities()
            : base("name=KhoNguyenLieuEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductPhoto> ProductPhotoes { get; set; }
        public virtual DbSet<ProductSubCategory> ProductSubCategories { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<spGetCategoryById_Result> spGetCategoryById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCategoryById_Result>("spGetCategoryById", idParameter);
        }
    
        public virtual ObjectResult<spGetListCategory_Result> spGetListCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetListCategory_Result>("spGetListCategory");
        }
    
        public virtual ObjectResult<spGetListSubCategory_Result> spGetListSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetListSubCategory_Result>("spGetListSubCategory");
        }
    
        public virtual ObjectResult<spGetListUser_Result> spGetListUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetListUser_Result>("spGetListUser");
        }
    
        public virtual ObjectResult<spGetPhotoById_Result> spGetPhotoById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPhotoById_Result>("spGetPhotoById", idParameter);
        }
    
        public virtual ObjectResult<spGetProductById_Result> spGetProductById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProductById_Result>("spGetProductById", idParameter);
        }
    
        public virtual ObjectResult<spGetSubCategoryById_Result> spGetSubCategoryById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSubCategoryById_Result>("spGetSubCategoryById", idParameter);
        }
    
        public virtual ObjectResult<spGetSubCatetoryByCategory_Result> spGetSubCatetoryByCategory(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSubCatetoryByCategory_Result>("spGetSubCatetoryByCategory", idParameter);
        }
    
        public virtual ObjectResult<spGetUserById_Result> spGetUserById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserById_Result>("spGetUserById", idParameter);
        }
    
        public virtual int spInsertCategory(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertCategory", nameParameter);
        }
    
        public virtual int spInsertProduct(string productname, Nullable<int> categoryid, Nullable<int> subcategoryid, Nullable<bool> sale, Nullable<decimal> price, Nullable<decimal> pricesale, Nullable<int> photodid, string desc, Nullable<bool> slide)
        {
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(int));
    
            var subcategoryidParameter = subcategoryid.HasValue ?
                new ObjectParameter("subcategoryid", subcategoryid) :
                new ObjectParameter("subcategoryid", typeof(int));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("sale", sale) :
                new ObjectParameter("sale", typeof(bool));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var pricesaleParameter = pricesale.HasValue ?
                new ObjectParameter("pricesale", pricesale) :
                new ObjectParameter("pricesale", typeof(decimal));
    
            var photodidParameter = photodid.HasValue ?
                new ObjectParameter("photodid", photodid) :
                new ObjectParameter("photodid", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var slideParameter = slide.HasValue ?
                new ObjectParameter("slide", slide) :
                new ObjectParameter("slide", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertProduct", productnameParameter, categoryidParameter, subcategoryidParameter, saleParameter, priceParameter, pricesaleParameter, photodidParameter, descParameter, slideParameter);
        }
    
        public virtual int spInsertProductPhoto(string filename, byte[] thumnail, byte[] largephoto, string largefilename)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var thumnailParameter = thumnail != null ?
                new ObjectParameter("thumnail", thumnail) :
                new ObjectParameter("thumnail", typeof(byte[]));
    
            var largephotoParameter = largephoto != null ?
                new ObjectParameter("largephoto", largephoto) :
                new ObjectParameter("largephoto", typeof(byte[]));
    
            var largefilenameParameter = largefilename != null ?
                new ObjectParameter("largefilename", largefilename) :
                new ObjectParameter("largefilename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertProductPhoto", filenameParameter, thumnailParameter, largephotoParameter, largefilenameParameter);
        }
    
        public virtual int spInsertSubCategory(string name, Nullable<int> categoryId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertSubCategory", nameParameter, categoryIdParameter);
        }
    
        public virtual int spInsertUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUser", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spLogin", usernameParameter, passwordParameter);
        }
    
        public virtual int spUpdateCategory(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateCategory", idParameter, nameParameter);
        }
    
        public virtual int spUpdatePhotoById(Nullable<int> id, string filename, byte[] thumnail, byte[] largephoto, string largefilename)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var thumnailParameter = thumnail != null ?
                new ObjectParameter("thumnail", thumnail) :
                new ObjectParameter("thumnail", typeof(byte[]));
    
            var largephotoParameter = largephoto != null ?
                new ObjectParameter("largephoto", largephoto) :
                new ObjectParameter("largephoto", typeof(byte[]));
    
            var largefilenameParameter = largefilename != null ?
                new ObjectParameter("largefilename", largefilename) :
                new ObjectParameter("largefilename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePhotoById", idParameter, filenameParameter, thumnailParameter, largephotoParameter, largefilenameParameter);
        }
    
        public virtual int spUpdateSubCategory(Nullable<int> id, string name, Nullable<int> categoryid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateSubCategory", idParameter, nameParameter, categoryidParameter);
        }
    
        public virtual int spUpdateUser(Nullable<int> id, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateUser", idParameter, passwordParameter);
        }
    }
}
